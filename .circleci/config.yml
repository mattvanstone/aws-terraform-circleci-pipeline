version: 2.1

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:0.12.20

prod-context: &prod-context
  context: production

dev-context: &dev-context
  context: development

terraform_job: &terraform-job
  description: Run terraform plan against a specified environment.
  executor: terraform
  parameters:
    env:
      description: The name of the environment to run the job against
      type: string
    action:
      description: The terraform action to perform
      type: string
  steps:
    - checkout
    - run:
        name: terraform init 
        command: terraform init -input=false -backend-config=<< parameters.env >>.tfbackend
    - run:
        name: terraform << parameters.action >>
        command: terraform << parameters.action >> -var-file=<< parameters.env >>.tfvars -input=false
    
jobs:
  dev_plan:
    <<: *terraform-job
  
  prod_plan: 
    <<: *terraform-job

  dev_apply:
    <<: *terraform-job
  
  prod_apply: 
    <<: *terraform-job

  detect_drift:
    description: Runs terraform plan with detailed exitcode to detect drift
    <<: *terraform-job

workflows:
  plan:
    description: A workflow that deploys to one environment and runs plan in the next environment.
    jobs:
      - dev_plan:
          <<: *dev-context
          env: dev
          action: plan
          filters:
            branches:
              ignore:
                - master
                - develop
      - prod_plan:
          <<: *prod-context
          env: prod
          action: plan
          filters:
            branches:
              only:
                - develop

  apply:
    description: A workflow that deploys to one environment and runs plan in the next environment.
    jobs:
      - dev_apply:
          <<: *dev-context
          env: dev
          action: apply -auto-approve
          filters:
            branches:
              only:
                - develop
      - prod_apply:
          <<: *prod-context
          env: prod
          action: apply -auto-approve
          filters:
            branches:
              only:
                - master
  
  drift_detection:
    description: A scheduled workflow to run daily at 2pm UTC to detect drift in the prod environment. Job will fail if state does not match the real environment.
    triggers:
      - schedule:
          cron: "0 14 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - detect_drift:
          <<: *prod-context
          env: prod
          action: plan -detailed-exitcode